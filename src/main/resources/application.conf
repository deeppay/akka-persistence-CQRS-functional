akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"

akka.persistence.journal.leveldb.dir = "target/example/journal"
akka.persistence.snapshot-store.local.dir = "target/example/snapshots"

akka.actor.warn-about-java-serializer-usage = false

akka.persistence.journal {
  leveldb {
    event-adapters {
      tagging = "poc.persistence.write.OrderTaggingEventAdapter"
    }

    event-adapter-bindings {
      "poc.persistence.write.Events.OrderInitialized" = tagging
      "poc.persistence.write.Events.OrderCancelled" = tagging
    }
  }
}

actor {
  provider = "akka.cluster.ClusterActorRefProvider"
}

remote {
  log-remote-lifecycle-events = off
  netty.tcp {
    hostname = ${clustering.ip}
    port = ${clustering.port}
  }
}

akka {
  cluster {
    seed-nodes = [
      "akka.tcp://example@"${clustering.ip}":2551"
    ]
    sharding.state-store-mode = ddata
  }

  extensions = ["akka.cluster.ddata.DistributedData"]
}





clustering {
  ip = "127.0.0.1"
  port = 2551
}